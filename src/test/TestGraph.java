package test;
import model.*;

public class TestGraph 
{

	public static void main(String[] args) 
	{
		int[][] matrix = 
			new int[][] 
			{
				/*4x4*/
//				{0,0,1,0},
//				{0,0,1,1},
//				{1,1,0,0},
//				{0,1,0,0}
//				/*8x8*/
				{0,1,0,1,0,1,0,0},
				{1,0,1,0,0,1,1,0},
				{0,1,0,0,0,0,0,0},
				{1,0,0,0,1,0,0,0},
				{0,0,0,1,0,1,0,0},
				{1,1,0,0,1,0,0,1},
				{0,1,0,0,0,0,0,1},
				{0,0,0,0,0,1,1,0}
//			
//				{0,1,1,1,0,0,0,0},
//				{1,0,0,0,1,0,0,0},
//				{1,0,0,0,0,1,0,0},
//				{1,0,0,0,1,1,1,0},
//				{0,1,0,1,0,0,1,1},
//				{0,0,1,1,0,0,1,1},
//				{0,0,0,1,1,1,0,1},
//				{0,0,0,0,1,1,1,0}
//				/*15x15 Graph A*/
//				/*   {A,B,C,D,E,F,G,H,I,J,K,L,M,N,O}*/
//				/*A*/{0,1,0,0,0,1,1,0,0,1,0,0,0,0,0},
//				/*B*/{1,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
//				/*C*/{0,1,0,0,0,0,0,0,1,0,0,0,0,0,0},
//				/*D*/{0,0,0,0,1,0,1,0,0,0,0,0,0,0,0},
//				/*E*/{0,0,0,1,0,0,0,0,1,0,0,0,0,0,0},
//				/*F*/{1,0,0,0,0,0,1,0,0,0,1,1,0,0,0},
//				/*G*/{1,0,0,1,0,1,0,0,0,0,1,0,1,0,1},
//				/*H*/{0,0,0,0,0,0,0,0,1,0,0,0,0,0,1},
//				/*I*/{0,0,1,0,1,0,0,1,0,0,0,0,1,0,0},
//				/*J*/{1,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
//				/*K*/{0,0,0,0,0,1,1,0,0,0,0,0,0,0,0},
//				/*L*/{0,0,0,0,0,1,0,0,0,0,0,0,1,0,0},
//				/*M*/{0,0,0,0,0,0,1,0,1,0,0,1,0,1,0},
//				/*N*/{0,0,0,0,0,0,0,0,0,1,0,0,1,0,0},
//				/*O*/{0,0,0,0,0,0,1,1,0,0,0,0,0,0,0}
//				/*25x25 (Graph B)*/
//				/*   {A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y}*/
//				/*A*/{0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
//				/*B*/{1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
//				/*C*/{0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
//				/*D*/{1,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
//				/*E*/{0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
//				/*F*/{0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
//				/*G*/{0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0},
//				/*H*/{0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0},
//				/*I*/{0,0,0,1,1,1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0},
//				/*J*/{0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0},
//				/*K*/{0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
//				/*L*/{0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
//				/*M*/{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0},
//				/*N*/{0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0},
//				/*O*/{0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0},
//				/*P*/{0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0},
//				/*Q*/{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,1,0,0,0,0},
//				/*R*/{0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0},
//				/*S*/{0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0},
//				/*T*/{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0},
//				/*U*/{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,1,0,0},
//				/*V*/{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0},
//				/*W*/{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1},
//				/*X*/{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1},
//				/*Y*/{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0}
//				/*   {A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y}*/
//				/*26x26 (Graph C)*/
//				/*   {A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z}*/
//				/*A*/{0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
//				/*B*/{1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
//				/*C*/{0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
//				/*D*/{0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
//				/*E*/{0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
//				/*F*/{0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
//				/*G*/{0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0},
//				/*H*/{1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
//				/*I*/{0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
//				/*J*/{0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
//				/*K*/{0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
//				/*L*/{0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0},
//				/*M*/{0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0},
//				/*N*/{0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0},
//				/*O*/{0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0},
//				/*P*/{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0},
//				/*Q*/{0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
//				/*R*/{0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0},
//				/*S*/{0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
//				/*T*/{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0},
//				/*U*/{0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0},
//				/*V*/{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0},
//				/*W*/{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0},
//				/*X*/{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0},
//				/*Y*/{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1},
//				/*Z*/{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0}
//				/*   {A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z}*/
			};
		
		
//		int[][] matrix = new int[200][200];
//		for (int z=0;z<matrix.length;z++)
//			for(int s=z;s<matrix.length;s++)
//				matrix[z][s]=(int) Math.round( Math.random());
//		for (int z=1;z<matrix.length;z++)
//			for(int s=0;s<z;s++)
//				matrix[z][s]=matrix[s][z];
//		for (int z=0;z<matrix.length;z++)
//			matrix[z][z]=0;
		
//		int[][] matrix = new int[200][200];
//		for (int i=0;i<matrix.length-1;i++)
//		{
//			matrix[i][i+1]=1;
//			matrix[i+1][i]=1;
//		}

		
		
		Matrix ma= new Matrix(matrix);
		System.out.println(ma);
		Graph gr = new Graph("test");
		gr.setAdjazensmatirx(ma);
		gr.berechneDistanzmatrix();
		System.out.println(gr.getDistanzMatrix());
		gr.berechneDurchmesserRadiusZentrum();
		gr.berechneWegmatrix();
		System.out.println(gr.getWegmatrix());
		try 
		{
			System.out.println("Test: exp_csv");
//			gr.exportAdjazensmatirxCsv("C:\\scratch\\test.csv");
			gr.exportAdjazensmatirxCsv("java.io.tmpdir");
			System.out.println("Test: imp_csv");
//			gr.importMatrixCsv("C:\\scratch\\test.csv",",");
			gr.importMatrixCsv("java.io.tmpdir", ",");
			System.out.println(gr.getAdjazensmatirx());
		} 
		catch (GraphenRechnerException e) 
		{
			System.out.println(e.getMessage());
		}
	}


}


